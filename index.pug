---
layout: layouts/base
title: 11d.im
---
-
  let formatDate = (text) => {
    let d = new Date(text)

    let day = (d.getDate()).toString().padStart(2, '0')
    let month = (d.getMonth()+1).toString().padStart(2, '0')
    let year = d.getFullYear()

    let formated = `${day}.${month}.${year}`

    return formated
  }

-
  let notices = collections.notices.reduce((acc, n)=>{
    let title = (n.data.short) ? n.data.short : n.data.title
    let letter = title.charAt(0).toLowerCase()
    if (!(letter in acc)) acc[letter] = []
    acc[letter].push(n)
    return acc
  }, {})

h1 11d.im

h2 notices

p
  each n in Object.entries(notices)
    b !{ n[0] }&nbsp;:&nbsp;
    each note in n[1]
      span
        a(href=note.url) !{ (note.data.short) ? note.data.short : note.data.title }
        span(style="color: #aaa;")  â€¢ 
    | 

h2 journal

p
  each entry, index in collections.journal.reverse()
    span
      b !{ formatDate(entry.date) }&nbsp;:&nbsp;
      if entry.inputPath.includes('/yo/')
        | &nbsp;ðŸ‘‹&nbsp;
      a(href=entry.url) !{ entry.data.title }
      |
      unless index == collections.journal.length-1
        span(style="color: #aaa;")  â€¢ 
      
h2 passages

p
  each highlight in collections.highlights
    span
      b !{ highlight.data.author.first } !{ highlight.data.author.middle } !{ highlight.data.author.last }&nbsp;:&nbsp;
      a(href=highlight.url) !{ highlight.data.title }
      unless index == collections.journal.length-1
        span(style="color: #aaa;")  â€¢ 
